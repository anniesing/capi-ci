resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: cron-resource
  type: docker-image
  source:
    repository: cftoolsmiths/cron-test

resources:
  - name: terraform
    type: terraform
    source:
      storage:
        bucket: ((bosh_lite_storage_bucket))
        bucket_path: bosh-lite/
        access_key_id: ((bosh_lite_storage_access_key))
        secret_access_key: ((bosh_lite_storage_secret_key))
        endpoint: storage.googleapis.com
  - name: capi-ci
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/capi-ci.git
  - name: bosh-deployment
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/bosh-deployment.git
  - name: create-pool
    type: pool
    source:
      branch: master
      uri: git@github.com:cloudfoundry/capi-env-pool.git
      pool: bosh-lites
      private_key: ((bosh_lite_pool_deploy_key))
  - name: broken-pool
    type: pool
    source:
      branch: master
      uri: git@github.com:cloudfoundry/capi-env-pool.git
      pool: broken-bosh-lites
      private_key: ((bosh_lite_pool_deploy_key))
  - name: pool-repo
    type: git
    source:
      branch: master
      uri: git@github.com:cloudfoundry/capi-env-pool.git
      private_key: ((bosh_lite_pool_deploy_key))
  - name: create-bosh-lite-trigger
    type: git
    source:
      branch: master
      uri: git@github.com:cloudfoundry/capi-env-pool.git
      private_key: ((bosh_lite_pool_deploy_key))
      paths:
        - .trigger-bosh-lites-create # updated by check-pool-size
  - name: destroy-bosh-lite-trigger
    type: git
    source:
      branch: master
      uri: git@github.com:cloudfoundry/capi-env-pool.git
      private_key: ((bosh_lite_pool_deploy_key))
      paths:
        - .trigger-bosh-lites-destroy # updated by unclaim_bosh_lite alias
  - name: cf-deployment
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment.git
  - name: cf-deploy
    type: bosh-deployment
  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack_url))
  - name: friday-afternoon
    type: cron-resource
    source:
      expression: "30 13 * * 5"
      location: "America/Los_Angeles"
  - name: 5m
    type: time
    source:
      interval: 5m

jobs:
  - name: create-bosh-lite
    plan:
      - aggregate:
        - get: capi-ci
        - get: bosh-deployment
        - get: cf-deployment
        - get: create-bosh-lite-trigger
          trigger: true
      - put: terraform
        params:
          generate_random_name: true
          delete_on_failure: true
          terraform_source: capi-ci/terraform/bosh-lite/
          vars: &terraform-vars
            project_id: ((bosh_lite_project_id))
            json_key: ((bosh_lite_gcp_json_key))
            dns_project_id: ((dns_gcp_project_id))
            dns_json_key: ((dns_gcp_json_key))
            system_domain_suffix: ((bosh_lite_system_domain_suffix))
            dns_zone_name: ((bosh_lite_dns_zone_name))
      - do:
          - task: create-bosh-lite
            file: capi-ci/ci/bosh-lite/create-bosh-lite.yml
            params:
              GCP_JSON_KEY: ((bosh_lite_gcp_json_key))
          - do:
              - task: create-env-vars-file
                file: capi-ci/ci/bosh-lite/create-env-vars-file.yml
              - put: create-pool
                params:
                  add_claimed: bosh-lite-env-info/
              - task: upload-cf-assets
                file: capi-ci/ci/bosh-lite/upload-cf-assets.yml
              - task: write-bosh-target-file
                file: capi-ci/ci/bosh-lite/write-bosh-target-file.yml
              - put: cf-deploy
                params:
                  source_file: bosh-target/target.yml
                  manifest: cf-deployment/cf-deployment.yml
                  vars_files:
                  - bosh-target/vars.yml
                  ops_files:
                  - capi-ci/cf-deployment-operations/skip-cert-verify.yml
                  - capi-ci/cf-deployment-operations/use-latest-stemcell.yml
                  - cf-deployment/operations/bosh-lite.yml
                  - cf-deployment/operations/use-compiled-releases.yml
                  - capi-ci/cf-deployment-operations/seed-credhub-asg.yml
              - task: upload-to-gcs
                file: capi-ci/ci/gcs/upload-to-gcs.yml
                input_mapping:
                  environment: terraform
                  source-directory: director-state
                params:
                  GCP_JSON_KEY: ((bosh_lite_gcp_json_key))
                  GCP_BUCKET: ((bosh_lite_storage_bucket))
                  GCP_PATH: director-state
              - put: create-pool
                params:
                  release: bosh-lite-env-info/
            on_failure:
              aggregate:
              - put: create-pool
                params:
                  remove: bosh-lite/env-info/
              - task: delete-bosh-lite
                file: capi-ci/ci/bosh-lite/delete-bosh-lite.yml
        on_failure:
          aggregate:
          - put: create-pool
            params:
              remove: bosh-lite/env-info/
          - put: terraform
            params:
              action: destroy
              env_name_file: terraform/name
              terraform_source: capi-ci/terraform/bosh-lite/
              vars: *terraform-vars
            get_params:
              action: destroy

  - name: delete-bosh-lite
    plan:
      - aggregate:
        - get: destroy-bosh-lite-trigger
          version: every
          trigger: true
        - get: capi-ci
        - get: bosh-deployment
        - put: broken-pool
          params:
            acquire: true
      - task: download-from-gcs
        file: capi-ci/ci/gcs/download-from-gcs.yml
        input_mapping:
          environment: broken-pool
        output_mapping:
          destination-directory: director-state
        params:
          GCP_JSON_KEY: ((bosh_lite_gcp_json_key))
          GCP_BUCKET: ((bosh_lite_storage_bucket))
          GCP_PATH: director-state
          USE_ENV_NAMED_SUBDIR: true
      - task: delete-bosh-lite
        file: capi-ci/ci/bosh-lite/delete-bosh-lite.yml
      - put: terraform
        params:
          action: destroy
          env_name_file: broken-pool/name
          terraform_source: capi-ci/terraform/bosh-lite/
          vars: *terraform-vars
        get_params:
          action: destroy
      - task: delete-from-gcs
        file: capi-ci/ci/gcs/delete-from-gcs.yml
        input_mapping:
          environment: broken-pool
        params:
          GCP_JSON_KEY: ((bosh_lite_gcp_json_key))
          GCP_BUCKET: ((bosh_lite_storage_bucket))
          GCP_PATH: director-state
          USE_ENV_NAMED_SUBDIR: true
      - put: broken-pool
        params:
          remove: broken-pool/

  - name: check-pool-size
    build_logs_to_retain: 100
    plan:
      - aggregate:
        - get: capi-ci
        - get: pool-repo
        - get: 5m
          trigger: true
      - task: check-pool-size
        file: capi-ci/ci/bosh-lite/check-pool-size.yml
        input_mapping:
          env-pool: pool-repo
        params:
          MIN_UNCLAIMED_COUNT: 4
      - put: pool-repo
        params:
          repository: updated-env-pool
          rebase: true

  - name: slack-claimed-envs
    plan:
      - aggregate:
        - get: capi-ci
        - get: pool-repo
        - get: friday-afternoon
          trigger: true
      - task: print-claimed-envs
        file: capi-ci/ci/bosh-lite/print-claimed-envs.yml
        input_mapping:
          env-pool: pool-repo
        params:
          MESSAGE_PREFIX: ((slack_notification_prefix))
      - put: slack-alert
        params:
          channel: ((slack_notification_channel))
          text_file: message/message.txt
          silent: true
          username: "BOSH Herder"
          icon_emoji: ":bosh:"
